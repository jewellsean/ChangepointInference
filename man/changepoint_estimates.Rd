% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/changepoint_estimates.R
\name{changepoint_estimates}
\alias{changepoint_estimates}
\title{Estimate changepoints via L0 and binary segmentation}
\usage{
changepoint_estimates(dat, type, tuning_parameter,
  functional_pruning_out = FALSE)
}
\arguments{
\item{dat}{observed data}

\item{type}{specifies changepoint algorithm: L0 ("L0") or binary segmentation
("BS");}

\item{tuning_parameter}{L0 segmentation: tuning parameter \eqn{\lambda};
Binary segmentation: number of segments K.}

\item{functional_pruning_out}{boolean specifying whether, in the case of L0
segmentation, cost functions are returned. Defaults to FALSE.}
}
\value{
For L0 segmentation, returns a list with elements:

\code{estimated_means} estimated means

\code{change_pts} the set of changepoints

\code{cost} the cost at each time point

\code{n_intervals} the number of piecewise quadratics used at each
  point

\code{piecewise_square_losses} dataframe of optimal cost functions
  Cost_s*(mu) for s = 1,..., T.

For binary segmentation, returns a list with elements

\code{change_pts} the set of changepoints

\code{orders} estimated changepoints in the order that they entered
  the model

\code{signs} the signs of the change in mean due to each changepoint
  (in the same order as orders)
}
\description{
Estimate changepoints via L0 and binary segmentation
}
\details{
Consider the changepoint model \deqn{Y_t = \mu_t + \epsilon_t} where
\eqn{\epsilon_t iid N(0, \sigma^2)} for \eqn{ t=1,\ldots,T} and assume that
\eqn{\mu_1,\ldots,\mu_T} is  piecewise constant, in the sense that
\eqn{\mu_{\tau_j+1}=\mu_{\tau_j + 2 } = \ldots = \mu_{\tau_{j+1}}}, and
\eqn{\mu_{\tau_{j+1}} != \mu_{\tau_{j+1}+1}}, for \eqn{j=0,\ldots,K-1}, where
\eqn{0 = \tau_0 < \tau_1 < \ldots < \tau_K < \tau_{K+1} = T}, and where
\eqn{\tau_1,\ldots,\tau_K} represent the true changepoints.

Estimation:

This function estimates changepoints via L0 or binary segmentation based on
noisy observations \eqn{y_t, t = \ldots, T}. In the case of L0 segmentation,
changepoints are estimated by solving the optimization problem

\deqn{minimize_{\mu_1,...,\mu_T} 0.5 \sum_{t=1}^T ( y_t - \mu_t )^2 + \lambda
\sum_{t=2}^T 1_[\mu_t != \mu_{t-1}]}

for the global optimum. Our estimates for the changepoints correspond to the
breakpoints of \eqn{\hat{\mu}_1, \ldots, \hat{\mu}_T}. See Rigaill, G. (2015)
and Maidstone, R. et al. (2017) for more information and for discussion of
cost functions Cost_s*(mu).

In the case of binary segmentation, changepoints are estimated by recursively
maximizing the CUSUM statistic: the first estimated changepoint maximizes the
CUSUM statistic over all possible locations. Subsequent changepoints are
estimated at the location that maximizes the CUSUM statistic of the data when
regions between previously estimated changepoints are considered. This
results in estimated changepoints \eqn{M(y) = {\hat{\tau}_1, ...,
\hat{\tau}_K}}, the order each changepoint entered the model \eqn{O(y)}, and
the sign of the change in mean due to each changepoint \eqn{\Delta(y)}. See
Vostrikova, L. (1981) for additional details.
}
\examples{

### Generate sample data
set.seed(1)
mu <- rep(c(1, 3, -4), each = 100)
dat <- mu + rnorm(length(mu))


## L0 segmentation
fit <- changepoint_estimates(dat, "L0", 4, functional_pruning_out = TRUE)
print(fit)

# Estimated changepoints
fit$change_pts

# Plot optimal cost function at s = 300
# Colors denote the most recent changepoint associated with optimal cost at each mu
plot(fit, s = 300)
eval_cost_at.ChangepointInference_L0_estimated_changes(fit, s = 300, mu = -3)

### Binary segmentation
fit <- changepoint_estimates(dat, "BS", 2)
print(fit)

# sorted changepoints, order changepoints were estimated,
# sign of change in mean due to changepoint (in same order as fit$ordered_change_pts)
fit$change_pts
fit$ordered_change_pts
fit$change_pt_signs
}
\references{
Jewell, S., Fearnhead, P., and Witten, D. (2019+). Testing for a change in
mean after changepoint detection. Technical report.

Maidstone, R., Hocking, T., Rigaill, G., & Fearnhead, P. (2017). On optimal
multiple changepoint algorithms for large data. Statistics and Computing,
27(2), 519-533.

Rigaill, G. (2015). A pruned dynamic programming algorithm to recover the
best segmentations with 1 to K_max change-points. Journal de la Societe
Francaise de Statistique, 156(4), 180-205.

Vostrikova, L. Y. E. (1981). Detecting 'disorder' in multidimensional random
processes. In Doklady Akademii Nauk (Vol. 259, No. 2, pp. 270-274). Russian
Academy of Sciences.
}
\seealso{
\code{\link{changepoint_estimates}},
  \code{\link{changepoint_inference}},
}
